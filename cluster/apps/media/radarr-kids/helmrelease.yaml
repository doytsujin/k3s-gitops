---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr-kids
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts
      chart: radarr
      version: 16.2.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  dependsOn:
    - name: ingress-nginx
      namespace: networking
    - name: rook-ceph
      namespace: rook-ceph

  values:
    image:
      repository: ghcr.io/k8s-at-home/radarr
      tag: v4.1.0.6175

    env:
      TZ: "${TZ}"

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/radarr/nord.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "radarr-kids.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
      api:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host "radarr-kids.${SECRET_DOMAIN}"
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: radarr-kids-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: /mnt/user/media
        mountPath: /media
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: /mnt/user/k3s-backup/radarr-kids
        mountPath: /config/Backups
        readOnly: false

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      supplementalGroups:
        - 100

    tolerations:
      - key: "arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoSchedule"
