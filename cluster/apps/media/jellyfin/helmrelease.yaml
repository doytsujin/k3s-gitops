---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts
      chart: jellyfin
      version: 9.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/jellyfin
      tag: v10.7.7

    env:
      TZ: "Europe/Berlin"
      JELLYFIN_CACHE_DIR: "/config/cache"

    podSecurityContext:
      supplementalGroups:
      - 44
      - 109
      - 100

    service:
      main:
        type: LoadBalancer
        LoadBalancerIP: ${LB_JELLYFIN}
        externalTrafficPolicy: Local

    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "movie-play"
        hosts:
        - host: "jellyfin.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "jellyfin.${SECRET_DOMAIN}"
          secretName: jellyfin-cert


    persistence:
      config:
        enabled: true
        existingClaim: jellyfin-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: /mnt/user/media
        mountPath: /media
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory

    resources:
      requests:
        cpu: 1
        memory: 3Gi
        gpu.intel.com/i915: 1
      limits:
        memory: 4Gi
        gpu.intel.com/i915: 1

    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'

    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
        - name: config
          mountPath: /config
        securityContext:
          privileged: true

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: feature.node.kubernetes.io/custom-intel-gpu
              operator: In
              values:
              - "true"
