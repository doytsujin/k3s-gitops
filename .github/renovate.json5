{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>cbirkenbeul/k3s-gitops//.github/renovate/autoMerge",
    "github>cbirkenbeul/k3s-gitops//.github/renovate/labels",
    "github>cbirkenbeul/k3s-gitops//.github/renovate/semanticCommits"
  ],
  "platform": "github",
  "username": "rosey-bot[bot]",
  "repositories": ["cbirkenbeul/k3s-gitops"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "Renovate Bot <bot@renovateapp.com>",
  "timezone": "Europe/Berlin",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "helm-values": {
    "fileMatch": [
      "cluster/.+/helmrelease\\.yaml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ],
    "ignorePaths": [
      "cluster/base/"
    ]
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ]
  },
  "docker-compose": {
    "fileMatch": [
      "ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process HelmRelease files
    {
      "fileMatch": [
        "cluster/.+\\.yaml$"
      ],
      "matchStrings": [
        // helm releases
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process cert-manager CRD's
    {
      "fileMatch": [
        "cluster/crds/cert-manager/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process kube-prometheus-stack CRD's
    {
      "fileMatch": [
        "cluster/crds/kube-prometheus-stack/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process Traefik CRD's
    {
      "fileMatch": [
        "cluster/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process External Snapshotter and External DNS CRD's
    {
      "fileMatch": [
        "cluster/crds/external-snapshotter/.+\\.yaml$",
        "cluster/crds/external-dns/.+\\.yaml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?)\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "github-releases"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    // global docker datasource settings
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "commitMessageTopic": "container image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "matchUpdateTypes": ["major", "minor", "patch"]
    },
    // add labels according to package and update types
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "labels": ["renovate/image", "dep/major"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "labels": ["renovate/image", "dep/minor"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "labels": ["renovate/image", "dep/patch"]
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "labels": ["renovate/helm", "dep/major"],
      "stabilityDays": 3
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "labels": ["renovate/helm", "dep/minor"]
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "labels": ["renovate/helm", "dep/patch"]
    },
    // Enable auto-merge for docker images
    // version strategies
    {
      "matchDatasources": ["docker"],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/linuxserver/freshrss"
      ]
    },
    {
      "matchManagers": ["pip_requirements"],
      "addLabels": ["renovate/python"]
    },
    {
      "matchManagers": ["ansible"],
      "addLabels": ["renovate/ansible"]
    },
    {
      "matchManagers": ["ansible-galaxy"],
      "addLabels": ["renovate/ansible-galaxy"]
    },
    {
      "matchManagers": ["pre-commit"],
      "addLabels": ["renovate/pre-commit"]
    },
    {
      "matchDatasources": ["docker"],
      "automerge": true,
      "automergeType": "branch",
      "requiredStatusChecks": null,
      "matchUpdateTypes": ["minor", "patch"],
      "schedule": "after 3am and before 6am",
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/prowlarr",
        "ghcr.io/k8s-at-home/radarr",
        "ghcr.io/k8s-at-home/sonarr"
      ]
    },
    {
      "matchDatasources": ["helm"],
      "automerge": true,
      "automergeType": "branch",
      "requiredStatusChecks": null,
      "matchUpdateTypes": ["minor", "patch"],
      "matchPackageNames": [
        "kube-prometheus-stack",
        "grafana"
      ]
    },
    // group rook-ceph
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^rook.ceph"],
      "groupName": "rook-ceph",
      "additionalBranchPrefix": ""
    }
  ]
}
