{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>cbirkenbeul/k3s-gitops//.github/renovate/autoMerge",
    "github>cbirkenbeul/k3s-gitops//.github/renovate/labels",
    "github>cbirkenbeul/k3s-gitops//.github/renovate/semanticCommits"
  ],
  "platform": "github",
  "username": "rosey-bot[bot]",
  "repositories": ["cbirkenbeul/k3s-gitops"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "Renovate Bot <bot@renovateapp.com>",
  "timezone": "Europe/Berlin",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ],
  // set up renovate managers
  "docker-compose": {
    "fileMatch": [
      "ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"
    ]
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ]
  },
  "helmv3": {
    "fileMatch": [
      "charts/.+/Chart\\.ya?ml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ]
  },
  "regexManagers": [
    // Read and process GitHub Releases
    {
      "fileMatch": [
        "cluster/.+\\.ya?ml$",
        "ansible/.+\\.ya?ml$",
        "hack/.+\\.sh$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?)( versioning=(?<versioning>.*?))?\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?_version: \"(?<currentValue>.*)\"\n",
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?_VERSION=\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    // Read and process Custom Resource Definitions
    {
      "fileMatch": [
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    // Read and process Custom Resources
    {
      "fileMatch": [
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n .*: (?<currentValue>.*=?)"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // packages with custom versioning
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": [
        "docker.io/blakeblackshear/frigate"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": [
        "quay.io/minio/minio"
      ]
    },
    // packages with loose versioning
    {
      "description": "Cert-Manager image (for CRDs) and chart",
      "groupName": "Cert-Manager",
      "matchPackagePatterns": ["cert-manager"],
      "matchDatasources": ["docker", "helm"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": true
    },
    {
      "description": "External Snapshotter kustomization (for CRDs) and chart",
      "groupName": "External Snapshotter",
      "matchPackagePatterns": ["external-snapshotter", "snapshot-controller"],
      "matchDatasources": ["docker", "github-tags"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": true
    },
    {
      "description": "Node Feature Discovery kustomization (for CRDs) and chart",
      "groupName": "Node Feature Discovery",
      "matchPackagePatterns": ["node-feature-discovery"],
      "matchDatasources": ["helm", "github-tags"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": true
    },
    {
      "description": "Rook-Ceph image and chart",
      "groupName": "Rook-Ceph",
      "matchPackagePatterns": ["rook.ceph"],
      "matchDatasources": ["docker", "helm"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": true
    },
    {
      "description": "Thanos image and chart - mismatched versions",
      "groupName": "Thanos",
      "matchPackagePatterns": ["thanos"],
      "matchDatasources": ["docker", "github-releases", "helm"],
      "matchUpdateTypes": ["minor", "patch"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": false
    },
    {
      "description": "Vector image and chart - mismatched versions",
      "groupName": "Vector",
      "matchPackagePatterns": ["vector"],
      "matchDatasources": ["docker", "github-releases", "helm"],
      "matchUpdateTypes": ["minor", "patch"],
      "group": { "commitMessageTopic": "{{{groupName}}} group" },
      "separateMinorPatch": false
    }
  ]
}
